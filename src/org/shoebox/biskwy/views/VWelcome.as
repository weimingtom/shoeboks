/**  HomeMade by shoe[box]   Redistribution and use in source and binary forms, with or without   modification, are permitted provided that the following conditions are  met:  * Redistributions of source code must retain the above copyright notice,     this list of conditions and the following disclaimer.    * Redistributions in binary form must reproduce the above copyright    notice, this list of conditions and the following disclaimer in the     documentation and/or other materials provided with the distribution.    * Neither the name of shoe[box] nor the names of its     contributors may be used to endorse or promote products derived from     this software without specific prior written permission.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.*/package org.shoebox.biskwy.views {	import flash.text.TextFormatAlign;
	import fl.controls.Button;	import fl.controls.Label;	import org.shoebox.biskwy.commands.menu.CommandNewProject;	import org.shoebox.biskwy.commands.menu.CommandOpenLastProject;	import org.shoebox.biskwy.commands.menu.CommandOpenProject;	import org.shoebox.patterns.commands.samples.IResizeable;	import org.shoebox.patterns.commands.samples.StageResize;	import org.shoebox.patterns.factory.Factory;	import org.shoebox.patterns.mvc.abstracts.AView;	import org.shoebox.patterns.mvc.events.UpdateEvent;	import org.shoebox.patterns.mvc.interfaces.IView;	import org.shoebox.utils.logger.Logger;	import flash.data.EncryptedLocalStore;	import flash.display.Shape;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.text.TextFormat;	/**	 * View of the <b>AppWelcome<.b> MVC application	* <p>Permit to open, create a new project, and opening the last opened project</p>	* 	* @class org.shoebox.biskwy.views.VWelcome	* @author shoebox	*/	public class VWelcome extends AView implements IView , IResizeable {				protected var _btNEW		:Button;		protected var _btOPEN		:Button;		protected var _btLAST		:Button;		protected var _shBACK		:Shape;		protected var _spITEM		:Sprite;				// -------o constructor					public function VWelcome() : void {				StageResize.register(this);			}		// -------o public						/**			* update function			* @public			* @param 			* @return			*/			override final public function update(o:UpdateEvent = null) : void {						}												/**			* cancel function			* @public			* @param 			* @return			*/			override final public function cancel(e:Event = null) : void {												}						/**			* onResize function			* @public			* @param 			* @return			*/			public function onResize( e : Event = null ) : void {				trc('onResize');				_shBACK.width = StageResize.rect.width;				_shBACK.height = StageResize.rect.height;				_spITEM.x = ( StageResize.rect.width - 600 ) / 2;				_spITEM.y = ( StageResize.rect.height - 300 ) / 2;			}			/**			* initialize function			* @public			* @param 			* @return			*/			final override public function initialize() : void {							//					_shBACK = new Shape();					_shBACK.graphics.beginFill(0x2A2A2A);					_shBACK.graphics.drawRect(0,0,100,100);					_shBACK.graphics.endFill();					addChild(_shBACK);									//					_spITEM = Factory.build('StartupScreen') as Sprite;					addChild(_spITEM);								//					_btNEW  = Factory.build( Button , { x : 10 , 	y : 130 , width : 190 , label : 'NEW PROJECT' , height : 30} );					_btOPEN = Factory.build( Button , { x : 205 , 	y : 130 , width : 190 , label : 'OPEN PROJECT' , height : 30} );					_btLAST = Factory.build( Button , { x : 400 , 	y : 130 , width : 190 , label : 'OPEN LAST PROJECT' , height : 30} );					_btLAST.enabled = (EncryptedLocalStore.getItem('LatestProjects') !== null);										controller.registerCommand( CommandNewProject , 	null , _btNEW , MouseEvent.CLICK , false , 10 , true);					controller.registerCommand( CommandOpenProject , 	null , _btOPEN , MouseEvent.CLICK , false , 10 , true);					controller.registerCommand( CommandOpenLastProject , 	null , _btLAST , MouseEvent.CLICK , false , 10 , true);											_spITEM.addChild(_btNEW);					_spITEM.addChild(_btOPEN);					_spITEM.addChild(_btLAST);								//					var oLABEL : Label;					var vLABEL : Vector.<String> = Vector.<String>([													'Create a new Biskwy project file (Isometric - 2D - Platform)' , 													'Open an existing Biskwy project file (.db file)' , 													'Open the last opened project'													]);					var iX : uint = 20;					var s : String;										var 	oFORMAT : TextFormat = new TextFormat('PF Tempesta Seven_8pt_st',8,0xAAAAAA);						oFORMAT.align = TextFormatAlign.CENTER; 										for each( s in vLABEL){						oLABEL = Factory.build( Label , { x : iX , y : 170 , width : 170 , 	text : s , height : 150 , wordWrap : true });						oLABEL.setStyle('textFormat',  oFORMAT);						_spITEM.addChild( oLABEL );						iX+=195;					}														//					onResize();			}					// -------o protected		// -------o misc			public static function trc(...args : *) : void {				Logger.log(VWelcome, args);			}	}}