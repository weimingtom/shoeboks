/**  HomeMade by shoe[box]   Redistribution and use in source and binary forms, with or without   modification, are permitted provided that the following conditions are  met:  * Redistributions of source code must retain the above copyright notice,     this list of conditions and the following disclaimer.    * Redistributions in binary form must reproduce the above copyright    notice, this list of conditions and the following disclaimer in the     documentation and/or other materials provided with the distribution.    * Neither the name of shoe[box] nor the names of its     contributors may be used to endorse or promote products derived from     this software without specific prior written permission.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.*/package org.shoebox.biskwy.core {	import org.shoebox.errors.Errors;	import org.shoebox.utils.logger.Logger;	/**	* Contains all the Tables schemas of the Biskwy's SQLite DB	* 	* org.shoebox.biskwy.core.Schemas	* @author shoebox	*/	public class Schemas {				public static const TBMaps 	:String = 'CREATE TABLE IF NOT EXISTS TB_Maps ( id INTEGER PRIMARY KEY , def BOOLEAN , name TEXT UNIQUE , width NUMERIC , height NUMERIC , data BLOB)';				public static const TBTiles 	:String = 'CREATE TABLE IF NOT EXISTS TilesDB (id INTEGER PRIMARY KEY , ground BOOLEAN , name TEXT , cat TEXT , filepath TEXT , decalX NUMERIC , decalY NUMERIC , collide BOOLEAN , collideL BOOLEAN , collideR BOOLEAN , collideT BOOLEAN , collidB BOOLEAN , rigidbody BOOLEAN , mass NUMBER , active BOOLEAN ,media BLOB)';				public static const TBGroups	:String = 'CREATE TABLE IF NOT EXISTS TB_Groups (id INTEGER PRIMARY KEY , name TEXT UNIQUE , cat TEXT , baseW NUMERIC , baseH NUMERIC , height NUMERIC , data BLOB , img BLOB)';				public static const TBConfig	:String = 'CREATE TABLE IF NOT EXISTS Config ( name TEXT , tileSize NUMERIC , type TEXT , camW NUMERIC , camH NUMERIC )';				// -------o constructor					/**			* Constructor of the Schemas class			*			* @public			* @return	void			*/			public function Schemas() : void {				throw new Error(Errors.STATICCLASSERROR);			}		// -------o public				// -------o protected		// -------o misc			public static function trc(...args : *) : void {				Logger.log(Schemas, args);			}	}}